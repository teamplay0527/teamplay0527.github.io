# 📊 Airbnb 고객 세분화를 위한 K-Means Clustering

---

## 📌 개요

Airbnb는 전 세계 수백만 명의 사용자 데이터를 기반으로 **K-Means Clustering**을 활용해 고객을 행동 패턴에 따라 그룹화하였습니다.  
이를 통해 맞춤형 마케팅, 추천 시스템 고도화, 신규 서비스 기획 등을 효과적으로 수행하였습니다.

---

## 🎯 문제 정의

- Airbnb 사용자들은 예약 빈도, 숙박 기간, 숙소 선호 타입 등 다양한 행동 패턴을 보입니다.
- 개별 사용자에게 맞는 경험을 제공하려면 비슷한 특성을 가진 사용자끼리 묶어야 합니다.
- 이를 위해 **K-Means Clustering**을 사용하여 **행동 기반 고객 세그먼트**를 자동으로 도출합니다.

---

## 📂 데이터와 변수 예시

Airbnb는 다음과 같은 변수를 사용했습니다:

| 변수명 | 설명 |
|--------|------|
| `booking_freq` | 연간 예약 빈도 |
| `stay_duration` | 평균 숙박 일수 |
| `room_type` | 숙소 타입 (집 전체, 개인실 등) |
| `city_center_preference` | 도심 선호도 (0~1) |
| `seasonality` | 예약 시즌 패턴 |

---

## ⚙️ K-Means Clustering 간략 설명

- **K-Means Clustering**은 데이터를 K개의 그룹으로 나누어 같은 그룹 내 데이터가 서로 유사하도록 하는 비지도 학습 알고리즘입니다.
- 클러스터 중심(centroid)을 초기화하고, 각 데이터를 가장 가까운 중심에 할당하고, 중심을 갱신하는 과정을 반복합니다.

---

## 🖥️ Python 코드 예제

아래 코드는 가상의 Airbnb 사용자 행동 데이터를 생성하고 K-Means로 군집화한 후 시각화하는 예제입니다.

```python
# 필요 라이브러리 설치
# pip install numpy pandas scikit-learn matplotlib seaborn

import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns

# --------------------------------
# 1) 가상 Airbnb 사용자 데이터 생성
# --------------------------------
np.random.seed(42)
n_users = 500

data = pd.DataFrame({
    'booking_freq': np.random.poisson(3, n_users),    # 연간 예약 빈도
    'stay_duration': np.random.normal(5, 2, n_users), # 평균 숙박 일수
    'room_type': np.random.choice([0, 1], n_users),   # 0: 개인실, 1: 집 전체
    'city_center_preference': np.random.uniform(0, 1, n_users)
})

print(data.head())

# --------------------------------
# 2) 데이터 표준화
# --------------------------------
scaler = StandardScaler()
X_scaled = scaler.fit_transform(data)

# --------------------------------
# 3) 최적의 K 찾기 (Elbow Method)
# --------------------------------
inertia = []
K = range(1, 10)
for k in K:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X_scaled)
    inertia.append(kmeans.inertia_)

plt.plot(K, inertia, 'bo-')
plt.xlabel('Number of Clusters (K)')
plt.ylabel('Inertia')
plt.title('Elbow Method for Optimal K')
plt.show()

# --------------------------------
# 4) K-Means 모델 학습 및 군집화
# --------------------------------
kmeans = KMeans(n_clusters=3, random_state=42)
data['cluster'] = kmeans.fit_predict(X_scaled)

print(data.groupby('cluster').mean())

# --------------------------------
# 5) 시각화 (2D)
# --------------------------------
sns.scatterplot(
    x='booking_freq',
    y='stay_duration',
    hue='cluster',
    palette='Set2',
    data=data
)
plt.title('Airbnb Customer Segmentation by K-Means')
plt.xlabel('Booking Frequency')
plt.ylabel('Stay Duration')
plt.show()

## 📊 Elbow Method 예시

> 아래 그림은 군집의 개수(K)에 따른 Inertia 변화를 시각화한 것입니다.  
> 꺾이는 지점(Elbow Point)을 찾아 최적의 K를 선택합니다.

![Elbow Method](images/elbow_method.png)
